{"version":3,"file":"../backend/public/javascripts/app.js","sources":["app/app.coffee","app/components.coffee","app/controllers.coffee","app/controllers/tasks.coffee","app/controllers/tasks/task.coffee","app/initialize.coffee","app/models.coffee","app/models/task.coffee","app/router.coffee","app/routes.coffee","app/routes/tasks.coffee","app/templates.coffee","app/templates/application.hbs","app/templates/tasks.hbs","app/templates/tasks/_form.hbs","app/templates/tasks/task.hbs","app/views.coffee","app/views/task.coffee"],"names":[],"mappings":"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","sourcesContent":["module.exports=App=window.App = Ember.Application.create\n\tLOG_TRANSITIONS:true\n\tLOG_VIEW_LOOKUPS: true\nApp.ApplicationStore=DS.Store.extend\n\tadapter: 'DS.ActiveModelAdapter'\n\nApp.ApplicationAdapter = DS.ActiveModelAdapter;\n","","require 'controllers/tasks'\nrequire 'controllers/tasks/task'","App=require 'app'\n\nApp.TasksController=Em.ArrayController.extend()","App=require 'app'\n\nApp.TaskController=Em.ObjectController.extend\n\tneeds:['tasks']\n\tactions:\n\t\tsaveTask:->\n\t\t\t\tidExists=Em.isEmpty @get 'model.id'\n\t\t\t\ttasksController=@get('controllers.tasks')\n\t\t\t\tstore=@store\n\t\t\t\t@get('model').save().then (model)->\n\t\t\t\t\tif idExists\n\t\t\t\t\t\ttasksController.set 'newTask',store.createRecord 'task'\n\t\tcompleteTask:->\n\t\t\t\t@get('model').toggleComplete()\n\t\tdestroyTask:->\n\t\t\t\t@get('model').destroyRecord()\n","App=require 'app'\n\nrequire 'models'\nrequire 'router'\nrequire 'routes'\nrequire 'controllers'\nrequire 'views'\nrequire 'templates'","require 'models/task'","App=require 'app'\n\nApp.Task=DS.Model.extend\n\tname: DS.attr 'string'\n\tdescription: DS.attr 'string'\n\tcompleted:DS.attr 'boolean'\n\n\t#I need this for CSS\n\tisCompleted:(->\n\t\t@get 'completed'\n\t).property('completed')\n\n\tisNew:(-> Em.isEmpty @get 'id').property('id')\n\n\ttoggleComplete:->\n\t\tconsole.log 'calling toggle complete'\n\t\t@set 'completed',!@get 'completed'\n\t\t@save()","App=require 'app'\n\nApp.Router.map ->\n\t@resource 'tasks',->\n\t\t@route 'task',{path: 'tasks/:id'}","require 'routes/tasks'","App=require 'app'\n\nApp.TasksRoute=Em.Route.extend\n\tmodel:->\n\t\t@store.find 'task'\n\tsetupController:(controller,model)->\n\t\tcontroller.setProperties\n\t\t\tmodel:model\n\t\t\tnewTask:@store.createRecord('task')","require 'templates/application'\n\nrequire 'templates/tasks'\nrequire 'templates/tasks/task'\nrequire 'templates/tasks/_form'","module.exports = Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h1 class='heading'>Timeline</h1>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['tasks'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var stack1, hashTypes, hashContexts, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n\t\");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.render || (depth0 && depth0.render)),stack1 ? stack1.call(depth0, \"task\", \"\", options) : helperMissing.call(depth0, \"render\", \"task\", \"\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  }\n\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  else { data.buffer.push(''); }\n  \n});","module.exports = Ember.TEMPLATES['tasks/_form'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class='form'>\\n\t<div class=\\\"full-width\\\">\\n\t\t<label>Name</label>\");\n  hashContexts = {'value': depth0,'class': depth0};\n  hashTypes = {'value': \"ID\",'class': \"STRING\"};\n  options = {hash:{\n    'value': (\"name\"),\n    'class': (\"labeled\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n\t</div>\\n\t<div class=\\\"full-width\\\">\\n\t\t<label>Description</label>\");\n  hashContexts = {'value': depth0,'class': depth0};\n  hashTypes = {'value': \"ID\",'class': \"STRING\"};\n  options = {hash:{\n    'value': (\"description\"),\n    'class': (\"labeled\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n\t</div>\\n\t<div class=\\\"t-controls\\\">\\n\t\t<button class='button tiny' \");\n  hashContexts = {'target': depth0};\n  hashTypes = {'target': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{\n    'target': (\"view\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Cancel</button>\\n\t\t<button class='button tiny success' \");\n  hashContexts = {'target': depth0};\n  hashTypes = {'target': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n    'target': (\"view\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Save</button>\\n\t</div>\\n</div>\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['tasks/task'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"isNew\", {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashContexts, hashTypes;\n  data.buffer.push(\"\\n\t\t\t<label>New Task</label>\\n\t\t\t<p></p>\\n\t\t\t<div class='t-controls'>\\n\t\t\t\t<button class='button tiny' \");\n  hashContexts = {'target': depth0};\n  hashTypes = {'target': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n    'target': (\"view\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">New</button>\\n\t\t\t</div>\\n\t\t\");\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t\t<div class=\\\"full-width\\\"><label>Name</label><h5 class='labeled'>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h5></div>\\n\t\t\t<div class=\\\"full-width\\\"><label>Description</label><p class='labeled'>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</p></div>\\n\t\t\t<div class='t-controls'>\\n\t\t\t\t<button class='button tiny' \");\n  hashContexts = {'target': depth0};\n  hashTypes = {'target': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n    'target': (\"view\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Edit</button>\\n\t\t\t\t<button class='button tiny' \");\n  hashContexts = {'target': depth0};\n  hashTypes = {'target': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"complete\", {hash:{\n    'target': (\"view\")\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\\n\t\t\t\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"isCompleted\", {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t\t\t</button>\\n\t\t\t\t<button class='button tiny alert' \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"destroyTask\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Delete</button>\\n\t\t\t</div>\\n\t\t\");\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n\t\t\t\t\t\tIncomplete\\n\t\t\t\t\t\");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n\t\t\t\t\t\tComplete\\n\t\t\t\t\t\");\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || (depth0 && depth0.partial)),stack1 ? stack1.call(depth0, \"tasks/form\", options) : helperMissing.call(depth0, \"partial\", \"tasks/form\", options))));\n  data.buffer.push(\"\\n\t\");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\":task isCompleted:completed:not-completed\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\\n\\n\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack2 = helpers.unless.call(depth0, \"view.isEditing\", {hash:{},inverse:self.program(9, program9, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n</div>\");\n  return buffer;\n  \n});","require 'views/task'","App=require 'app'\n\nApp.TaskView=Em.View.extend\n\ttemplateName:'tasks/task'\n\tisEditing:false\n\n\tactions:\n\t\tedit:->\n\t\t\tif @get 'isEditing'\n\t\t\t\t@get('controller').send 'saveTask'\n\t\t\t@set 'isEditing',!@get 'isEditing'\n\t\tcancel:->\n\t\t\t@set 'isEditing',!@get 'isEditing'\n\n\t\tcomplete:->\n\t\t\t@get('controller').send 'completeTask'"]}